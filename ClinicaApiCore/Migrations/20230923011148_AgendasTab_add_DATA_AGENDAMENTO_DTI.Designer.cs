// <auto-generated />
using System;
using ClinicaApiCore.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicaApiCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230923011148_AgendasTab_add_DATA_AGENDAMENTO_DTI")]
    partial class AgendasTab_add_DATA_AGENDAMENTO_DTI
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClinicaApiCore.Entities.Agendas", b =>
                {
                    b.Property<long>("ID_AGENDA_LONG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID_AGENDA_LONG"));

                    b.Property<DateTime?>("DATA_AGENDAMENTO_DTI")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATA_DTI")
                        .HasColumnType("datetime2");

                    b.Property<long>("ID_MEDICO_LONG")
                        .HasColumnType("bigint");

                    b.Property<long?>("ID_PACIENTE_LONG")
                        .HasColumnType("bigint");

                    b.Property<long>("ID_PROCEDIMENTO_LONG")
                        .HasColumnType("bigint");

                    b.Property<int>("ID_STATUS_INT")
                        .HasColumnType("int");

                    b.HasKey("ID_AGENDA_LONG");

                    b.HasIndex("ID_MEDICO_LONG");

                    b.HasIndex("ID_PACIENTE_LONG");

                    b.HasIndex("ID_PROCEDIMENTO_LONG");

                    b.ToTable("AGENDAS_TAB");
                });

            modelBuilder.Entity("ClinicaApiCore.Entities.AgendasVW", b =>
                {
                    b.Property<long>("ID_AGENDA_LONG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID_AGENDA_LONG"));

                    b.Property<DateTime>("DATA_DTI")
                        .HasColumnType("datetime2");

                    b.Property<long>("ID_MEDICO_LONG")
                        .HasColumnType("bigint");

                    b.Property<long>("ID_PROCEDIMENTO_LONG")
                        .HasColumnType("bigint");

                    b.Property<int>("ID_STATUS_INT")
                        .HasColumnType("int");

                    b.Property<string>("MEDICO_STR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PROCEDIMENTO_STR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_AGENDA_LONG");

                    b.ToTable("AgendasVW");
                });

            modelBuilder.Entity("ClinicaApiCore.Entities.Medicos", b =>
                {
                    b.Property<long>("ID_MEDICO_LONG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID_MEDICO_LONG"));

                    b.Property<string>("CPF_STR")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NOME_STR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NUM_REGISTRO_STR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_MEDICO_LONG");

                    b.ToTable("MEDICOS_TAB");
                });

            modelBuilder.Entity("ClinicaApiCore.Entities.Pacientes", b =>
                {
                    b.Property<long>("ID_PACIENTE_LONG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID_PACIENTE_LONG"));

                    b.Property<string>("CELULAR_STR")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CPF_STR")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NOME_STR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID_PACIENTE_LONG");

                    b.ToTable("PACIENTES_TAB");
                });

            modelBuilder.Entity("ClinicaApiCore.Entities.Procedimentos", b =>
                {
                    b.Property<long>("ID_PROCEDIMENTO_LONG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID_PROCEDIMENTO_LONG"));

                    b.Property<string>("DESCRICAO_STR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("VALOR_DEC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_PROCEDIMENTO_LONG");

                    b.ToTable("PROCEDIMENTOS_TAB");
                });

            modelBuilder.Entity("ClinicaApiCore.Entities.Agendas", b =>
                {
                    b.HasOne("ClinicaApiCore.Entities.Medicos", "Medicos")
                        .WithMany()
                        .HasForeignKey("ID_MEDICO_LONG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaApiCore.Entities.Pacientes", "Pacientes")
                        .WithMany()
                        .HasForeignKey("ID_PACIENTE_LONG");

                    b.HasOne("ClinicaApiCore.Entities.Procedimentos", "Procedimentos")
                        .WithMany()
                        .HasForeignKey("ID_PROCEDIMENTO_LONG")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicos");

                    b.Navigation("Pacientes");

                    b.Navigation("Procedimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
